{"version":3,"sources":["components/LoggedUserContext/index.ts","services/api.ts","components/Topbar/styles.ts","components/Topbar/index.tsx","pages/LandingPage/styles.ts","pages/LandingPage/index.tsx","pages/LoginPage/styles.ts","pages/LoginPage/index.tsx","pages/Signup/styles.ts","pages/Signup/index.tsx","pages/VerifyLogged/index.tsx","components/Chat/Message/styles.ts","components/Chat/Message/index.tsx","components/Chat/MessageForm/index.ts","components/Chat/Container/index.ts","components/Chat/index.tsx","pages/GlobalChat/index.tsx","services/socket.ts","routes.tsx","pages/Loading/styles.ts","pages/Loading/index.tsx","App.tsx","index.tsx","assets/img/loading.png"],"names":["LoggedUserContext","createContext","changeValue","logged","api","Axios","create","baseURL","withCredentials","TopbarStyle","styled","header","props","justifyContent","Topbar","children","history","useHistory","loggedUserContext","useContext","onClick","delete","then","user","undefined","push","catch","alert","id","Container","main","LandingPage","Header","Main","LoginForm","form","SignupSection","section","LoginPage","useState","loginUsername","setLoginUsername","loginPassword","setLoginPassword","userContext","onSubmit","evt","preventDefault","post","username","password","err","response","status","className","size","type","value","onChange","target","SignupForm","SignupPage","setUsername","setPassword","passwordConfirmation","setPasswordConfirmation","usernameError","setUsernameError","passError","setPassError","passConfirmError","setPassConfirmError","errorInputStyle","border","JSON","stringify","data","placeholder","style","VerifyLogged","useEffect","location","pathname","startsWith","replace","MessageStyle","article","fromUser","Message","author","content","WriteMessageForm","ChatContainer","div","Chat","io","socketClient","messageInputVal","setMessageInputVal","messages","setMessages","containerRef","useRef","sendMessage","emit","on","msg","prevMessages","onNewMessage","current","scrollTop","scrollHeight","ref","map","message","index","key","minRows","maxRows","onKeyDown","shiftKey","GlobalChat","SocketIOClient","Router","component","path","exact","rotating","keyframes","RotatingImg","img","Loading","src","App","login","setLogin","a","get","loginContextVal","newVal","Provider","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.6419b88f.chunk.js","sourcesContent":["import React, { createContext } from 'react';\r\n\r\nexport interface IContextValue {\r\n    changeValue: (newVal: Omit<IContextValue, 'changeValue'>) => any,\r\n    logged: boolean,\r\n    user?: string\r\n}\r\n\r\nconst defaultValue: IContextValue = {\r\n    changeValue: () => { },\r\n    logged: false\r\n}\r\n\r\nexport const LoggedUserContext = createContext<IContextValue | undefined>(defaultValue);","import Axios from 'axios';\r\n\r\nexport const api = Axios.create({\r\n    baseURL: 'http://25.42.11.72:25565/',\r\n    withCredentials: true\r\n});","import { HTMLAttributes } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const TopbarStyle = styled.header`\r\n    display: flex;\r\n    flex-direction: row-reverse;\r\n    align-items: center;\r\n    height: 40px;\r\n    position: fixed;\r\n    top: 0; left: 0;\r\n    width: 100%;\r\n    background: #0D0D0D;\r\n\r\n    & > button {\r\n        background: none;\r\n        border: none;\r\n        color: white;\r\n        width: 90px; height: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-evenly;\r\n        cursor: pointer;\r\n    }\r\n\r\n    & section#children {\r\n        flex: 1;\r\n        height: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: ${(props: {justifyContent?: string} & HTMLAttributes<HTMLDivElement>) => props.justifyContent || 'start'};\r\n    }\r\n`;","import React, { useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FaSignOutAlt } from 'react-icons/fa';\r\n\r\nimport { LoggedUserContext } from '../LoggedUserContext';\r\nimport { api } from \"../../services/api\";\r\n\r\nimport { TopbarStyle } from './styles';\r\n\r\ninterface TopbarProps {\r\n    justifyContent?: string;\r\n}\r\n\r\nexport const Topbar: React.FC<TopbarProps> = ({ children, justifyContent }) => {\r\n    const history = useHistory();\r\n    const loggedUserContext = useContext(LoggedUserContext);\r\n\r\n    function handleLogout() {\r\n        api.delete('/logout').then(() => {\r\n            loggedUserContext!.changeValue({logged: false, user: undefined})\r\n            history.push('/login');\r\n        }).catch(() => {\r\n            alert(\"Ocorreu um erro inesperado, tente novamente.\")\r\n        });\r\n    }\r\n\r\n    return (\r\n        <TopbarStyle justifyContent={justifyContent}>\r\n            <button onClick={handleLogout}><FaSignOutAlt />Logout</button>\r\n            <section id=\"children\">{children}</section>\r\n        </TopbarStyle>\r\n    )\r\n}","import styled from 'styled-components';\r\n\r\nexport const Container = styled.main`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    & > * {\r\n        margin: 20px auto;\r\n    }\r\n\r\n    & button {\r\n        display: flex;\r\n        align-items: center;\r\n        border: none;\r\n        height: 35px;\r\n        cursor: pointer;\r\n    }\r\n\r\n    & button svg {\r\n        margin-left: 5px;\r\n    }\r\n`;","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FaArrowRight } from 'react-icons/fa';\r\nimport { Topbar } from \"../../components/Topbar\";\r\n\r\nimport { Container } from './styles';\r\n\r\nconst LandingPage: React.FC = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    function navigateToChat() {\r\n        history.push('/chat');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Topbar />\r\n            <Container>\r\n                <h1>Bem-vindo!</h1>\r\n                <span>Conecte-se com pessoas em qualquer lugar. Aproveite nosso app!</span>\r\n                <button onClick={navigateToChat}>Continuar para o app <FaArrowRight /></button>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LandingPage;","import styled from 'styled-components';\r\n\r\nexport const Header = styled.header`\r\n    text-align: center;\r\n    font-family: 'Roboto', sans-serif;\r\n\r\n    h1 {\r\n        font-weigth: 500;\r\n        margin: 0 0 10px;\r\n    }\r\n\r\n    span {\r\n        font-weigth: 400;\r\n    }\r\n`;\r\n\r\nexport const Main = styled.main`\r\n    margin-top: 30px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    height: 30vh; width: 60vw;\r\n    background: #111;\r\n    border-radius: 8px;\r\n`;\r\n\r\nexport const LoginForm = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    flex: 0.5;\r\n    border-right: 1px solid black;\r\n    padding: 0 20px;\r\n\r\n\r\n    h1 {\r\n        margin: 0;\r\n    }\r\n\r\n    .input-block {\r\n        width: 100%;\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: center;\r\n    }\r\n\r\n    svg {\r\n        padding: 5px;\r\n        background: black;\r\n        border-radius: 4px 0 0 4px;\r\n    }\r\n\r\n    input {\r\n        height: 25px;\r\n        border: 1px solid black;\r\n        border-radius: 0 4px 4px 0; \r\n        width: 80%;\r\n        padding: 0 10px;\r\n    }\r\n\r\n    button {\r\n        height: 35px;\r\n        padding: 10px 20px;\r\n        background: #444;\r\n        color: white;\r\n        border: none;\r\n    }\r\n`;\r\n\r\nexport const SignupSection = styled.section`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    flex: 0.5;\r\n    text-align: center;\r\n    border-left: 1px solid black;\r\n\r\n    \r\n    button {\r\n        height: 35px;\r\n        padding: 10px;\r\n        background: #444;\r\n        color: white;\r\n        border: none;\r\n    }\r\n`;","import React, { useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FaLock, FaUser } from 'react-icons/fa'\r\nimport { api } from '../../services/api';\r\n\r\nimport { Header, Main, LoginForm, SignupSection } from './styles';\r\nimport { LoggedUserContext } from '../../components/LoggedUserContext';\r\n\r\nconst LoginPage: React.FC = () => {\r\n\r\n    const [loginUsername, setLoginUsername] = useState(\"\");\r\n    const [loginPassword, setLoginPassword] = useState(\"\");\r\n\r\n    const userContext = useContext(LoggedUserContext);\r\n\r\n    const history = useHistory();\r\n\r\n    function handleChangeLoginUsername(evt: React.ChangeEvent<HTMLInputElement>) {\r\n        setLoginUsername(evt.target.value);\r\n    }\r\n\r\n    function handleChangeLoginPassword(evt: React.ChangeEvent<HTMLInputElement>) {\r\n        setLoginPassword(evt.target.value);\r\n    }\r\n\r\n    function handleSubmit(evt: React.FormEvent) {\r\n        evt.preventDefault();\r\n\r\n        api.post('/auth', {\r\n            username: loginUsername,\r\n            password: loginPassword\r\n        }).then(() => {\r\n            userContext?.changeValue({\r\n                logged: true,\r\n                user: loginUsername\r\n            });\r\n            history.push('/');\r\n        }).catch(err => {\r\n            if (err.response.status === 401) {\r\n                alert(\"Nome de usuário não encontrado!\");\r\n            } else if (err.response.status === 403) {\r\n                alert(\"Senha incorreta!\");\r\n            } else {\r\n                alert(\"Ocorreu um erro inesperado. Tente novamente mais tarde!\")\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    function handleClickRegister() {\r\n        history.push('/signup');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header>\r\n                <h1>Faça seu login!</h1>\r\n                <span>Ou junte-se a nós registrando-se!</span>\r\n            </Header>\r\n\r\n            <Main>\r\n                <LoginForm onSubmit={handleSubmit}>\r\n                    <h1>Entre</h1>\r\n\r\n                    <div className=\"input-block\">\r\n                        <FaUser size={25} />\r\n                        <input\r\n                            type=\"text\"\r\n                            value={loginUsername}\r\n                            onChange={handleChangeLoginUsername}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"input-block\">\r\n                        <FaLock size={25} />\r\n                        <input\r\n                            type=\"password\"\r\n                            value={loginPassword}\r\n                            onChange={handleChangeLoginPassword}\r\n                        />\r\n                    </div>\r\n\r\n                    <button type=\"submit\">Login</button>\r\n                </LoginForm>\r\n\r\n                <SignupSection>\r\n                    <h1>Ainda não está registrado?</h1>\r\n                    <span>Faça seu cadastro agora mesmo e comece a usar nosso app!</span>\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={handleClickRegister}\r\n                    >\r\n                        Registre-se\r\n                    </button>\r\n                </SignupSection>\r\n            </Main>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoginPage;","import styled from 'styled-components';\r\n\r\nexport const Header = styled.header`\r\n    text-align: center;\r\n    font-family: 'Roboto', sans-serif;\r\n\r\n    h1 {\r\n        font-weigth: 500;\r\n        margin: 0 0 10px;\r\n    }\r\n\r\n    span {\r\n        font-weigth: 400;\r\n    }\r\n`;\r\n\r\nexport const Main = styled.main`\r\n    margin-top: 30px;\r\n    padding: 0 40px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    height: 30vh; width: 60vw;\r\n    background: #111;\r\n    border-radius: 8px;\r\n`;\r\n\r\nexport const SignupForm = styled.form`\r\n    padding: 0 40px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    width: 100%;\r\n    border-radius: 16px;\r\n\r\n\r\n    h1 {\r\n        margin: 0;\r\n    }\r\n\r\n    .input-block {\r\n        width: 100%;\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: center;\r\n    }\r\n\r\n    svg {\r\n        box-sizing: content-box;\r\n        padding: 5px;\r\n        height: 15px; width: 15px;\r\n        background: black;\r\n        border-radius: 4px 0 0 4px;\r\n    }\r\n\r\n    input {\r\n        height: 25px;\r\n        border: 1px solid black;\r\n        border-radius: 0 4px 4px 0;\r\n        width: 100%;\r\n        padding: 0 10px;\r\n        margin-right: 10px;\r\n    }\r\n\r\n    button {\r\n        height: 35px;\r\n        padding: 10px 20px;\r\n        background: #444;\r\n        color: white;\r\n        border: none;\r\n    }\r\n`;","import React, { useState } from 'react';\r\nimport {FaUser, FaAsterisk } from 'react-icons/fa'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { api } from '../../services/api'\r\n\r\nimport { Header, Main, SignupForm } from './styles';\r\n\r\nconst SignupPage: React.FC = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passwordConfirmation, setPasswordConfirmation] = useState('');\r\n\r\n    const [usernameError, setUsernameError] = useState(false)\r\n    const [passError, setPassError] = useState(false);\r\n    const [passConfirmError, setPassConfirmError] = useState(false);\r\n\r\n    const errorInputStyle = {\r\n        border: '1px solid red'\r\n    }\r\n\r\n    function handleChangeUsername(evt: React.ChangeEvent<HTMLInputElement>) {\r\n        setUsername(evt.target.value);\r\n    }\r\n\r\n    function handleChangePassword(evt: React.ChangeEvent<HTMLInputElement>) {\r\n        setPassword(evt.target.value);\r\n    }\r\n    function handleChangePasswordConfirmation(evt: React.ChangeEvent<HTMLInputElement>) {\r\n        setPasswordConfirmation(evt.target.value);\r\n    }\r\n\r\n    function handleSubmit(evt: React.FormEvent) {\r\n        evt.preventDefault();\r\n\r\n        if (!username) {\r\n            setUsernameError(true);\r\n            return alert(\"O nome de usuário é obrigatório!\");\r\n        }\r\n\r\n        setUsernameError(false)\r\n\r\n        if (!password) {\r\n            setPassError(true);\r\n            return alert(\"A senha é obrigatória!\");\r\n        }\r\n\r\n        if (password !== passwordConfirmation) {\r\n            setPassError(true);\r\n            setPassConfirmError(true);\r\n            return alert(\"As senhas precisam ser iguais!\");\r\n        }\r\n\r\n        setPassError(false)\r\n        setPassConfirmError(false)\r\n\r\n        api.post('/signup', {\r\n            username,\r\n            password\r\n        }).then(() => {\r\n            alert(\"Cadastrado com sucesso!\");\r\n            history.push('/login');\r\n        }).catch(err => {\r\n            if (err.response.status === 400) {\r\n                alert(`Os campos abaixo são inválidos:\\n${JSON.stringify(err.response.data)}`);\r\n                \r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header>\r\n                <h1>Registre-se no nosso chat online!</h1>\r\n            </Header>\r\n\r\n            <Main>\r\n                <SignupForm onSubmit={handleSubmit}>\r\n                    <div className=\"input-block\">\r\n                        <FaUser size={25}/>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Nome de usuário\"\r\n                            value={username}\r\n                            onChange={handleChangeUsername}\r\n                            style={usernameError ? errorInputStyle : {}}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"input-block\">\r\n                        <FaAsterisk size={25} />\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Digite uma senha\"\r\n                            value={password}\r\n                            onChange={handleChangePassword}\r\n                            style={passError ? errorInputStyle : {}}\r\n                        />\r\n\r\n                        <FaAsterisk size={25} />\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Confirme a senha\"\r\n                            value={passwordConfirmation}\r\n                            onChange={handleChangePasswordConfirmation}\r\n                            style={passConfirmError ? errorInputStyle : {}}\r\n                        />\r\n                    </div>\r\n\r\n                    <button type=\"submit\">Cadastrar</button>\r\n                </SignupForm>\r\n            </Main>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SignupPage;","import React, { useContext, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {LoggedUserContext} from \"../../components/LoggedUserContext\";\r\n\r\nconst VerifyLogged: React.FC = () => {\r\n\r\n    const loggedUserContext = useContext(LoggedUserContext);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (loggedUserContext &&\r\n            !loggedUserContext.logged &&\r\n            !history.location.pathname.startsWith('/login') &&\r\n            !history.location.pathname.startsWith('/signup')\r\n        )\r\n            history.replace('/login');\r\n        \r\n    });\r\n\r\n    return <></>;\r\n}\r\n\r\nexport default VerifyLogged; ","import styled from 'styled-components';\r\n\r\ninterface MessageProps {\r\n    fromUser?: boolean;\r\n}\r\n\r\nexport const MessageStyle = styled.article`\r\n    padding: 10px;\r\n    border-radius: ${(props: MessageProps) => props.fromUser ? '10px 10px 0 10px' : '10px 10px 10px 0'};\r\n    width: max-content;\r\n    max-width: 50vw;\r\n    background: ${(props: MessageProps) => props.fromUser ? '#DDD' : '#333'};\r\n    align-self: ${(props: MessageProps) => props.fromUser ? 'flex-end' : 'start'};\r\n    ${(props: MessageProps) => props.fromUser ? 'color: black;' : ''}\r\n    margin-bottom: 5px;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    & header {\r\n        ${(props: MessageProps) => props.fromUser ? 'display: none;' : ''}\r\n        font-size: 80%;\r\n    }\r\n\r\n    & main {\r\n        \r\n    }\r\n`;","import React from 'react';\r\n\r\nimport { MessageStyle } from './styles';\r\n\r\nexport interface IMessage {\r\n    content: string;\r\n    fromUser?: boolean;\r\n    author?: string;\r\n}\r\n\r\nexport const Message: React.FC<IMessage> = props => {\r\n    return (\r\n        <MessageStyle {...props}>\r\n            <header><b>{props.author}</b> diz:</header>\r\n\r\n            <main>{props.content}</main>\r\n        </MessageStyle>\r\n    )\r\n}","import styled from 'styled-components';\r\n\r\nexport const WriteMessageForm = styled.form`\r\n    width: 100%;\r\n    height: fit-content;\r\n    padding: 20px;\r\n    border-radius: 10px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    & textarea {\r\n        display: flex;\r\n        align-items: center;\r\n        width: calc(95% - 40px);\r\n        padding: 8px;\r\n        border: none;\r\n        resize: none;\r\n        overflow: auto;\r\n        border-radius: 4px 0 0 4px;\r\n    }\r\n\r\n    & button {\r\n        border: none;\r\n        width: 40px;\r\n        height: 100%;\r\n        border-left: 1px solid black;\r\n        border-radius: 0 4px 4px 0;\r\n    }\r\n`;","import styled from 'styled-components';\r\n\r\nexport const ChatContainer = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 20px;\r\n    margin-top: 40px;\r\n    background: #111;\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow-y: scroll;\r\n`;","import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { FaPaperPlane } from 'react-icons/fa';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n\r\nimport { LoggedUserContext } from '../LoggedUserContext';\r\nimport { IMessage, Message } from './Message';\r\nimport { WriteMessageForm } from './MessageForm';\r\n\r\nimport { ChatContainer } from './Container';\r\n\r\ninterface IIncomingMessage {\r\n    content: string;\r\n    author: string;\r\n}\r\n\r\ninterface ChatProps {\r\n    chatId?: string;\r\n    socketClient: SocketIOClient.Socket;\r\n}\r\n\r\nexport const Chat: React.FC<ChatProps> = ({ socketClient: io }) => {\r\n\r\n    const [messageInputVal, setMessageInputVal] = useState(\"\");\r\n\r\n    const [messages, setMessages] = useState<IMessage[]>([]);\r\n\r\n    const onNewMessage = (msg: IMessage) => {\r\n        setMessages(prevMessages => ([\r\n            ...prevMessages,\r\n            msg\r\n        ])); \r\n    }\r\n\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n    const userContext = useContext(LoggedUserContext);\r\n\r\n    const username = userContext?.user;\r\n\r\n    useEffect(() => {\r\n        io.on('connected', () => {\r\n            io.emit('register', {\r\n                username\r\n            });\r\n        });\r\n\r\n        io.on('message', (msg: IIncomingMessage) => {\r\n            onNewMessage({\r\n                content: msg.content,\r\n                fromUser: msg.author === userContext?.user,\r\n                author: msg.author === userContext?.user ? undefined : msg.author\r\n            })\r\n        }); \r\n\r\n    }, []);\r\n    \r\n\r\n    useEffect(() => {\r\n        if (containerRef.current)\r\n            containerRef.current.scrollTop = containerRef.current.scrollHeight;\r\n    })\r\n\r\n    function handleChangeMessageInput(evt: React.ChangeEvent<HTMLTextAreaElement>) {\r\n        setMessageInputVal(evt.target.value);\r\n    }\r\n\r\n    function sendMessage(evt?: React.FormEvent) {\r\n        evt?.preventDefault();\r\n\r\n        io.emit('message', {\r\n            content: messageInputVal,\r\n            author: userContext?.user\r\n        } as IIncomingMessage)\r\n\r\n        setMessageInputVal(\"\");\r\n    }\r\n\r\n    function detectEnter(evt: React.KeyboardEvent<HTMLTextAreaElement>) {\r\n        if (evt.key === 'Enter') {\r\n            if (!evt.shiftKey) {\r\n                evt.preventDefault();\r\n\r\n                sendMessage();\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ChatContainer ref={containerRef}>\r\n                {messages.map((message, index) => (\r\n                    <Message\r\n                        key={index}\r\n                        fromUser={message.fromUser}\r\n                        content={message.content}\r\n                        author={message.author}\r\n                    />\r\n                ))}\r\n            </ChatContainer>\r\n\r\n            <WriteMessageForm onSubmit={sendMessage}>\r\n                <TextareaAutosize\r\n                    id=\"message-text\"\r\n                    minRows={1}\r\n                    maxRows={5}\r\n                    onChange={handleChangeMessageInput}\r\n                    onKeyDown={detectEnter}\r\n                    value={messageInputVal}\r\n                />\r\n                <button type=\"submit\"><FaPaperPlane /></button>\r\n            </WriteMessageForm>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport { socket } from '../../services/socket';\r\nimport { Chat } from '../../components/Chat';\r\nimport { Topbar } from '../../components/Topbar';\r\n\r\nconst GlobalChat: React.FC = () => {\r\n    return (\r\n        <>\r\n            <Topbar justifyContent=\"center\">\r\n                <h1>Chat Global</h1>\r\n            </Topbar>\r\n\r\n            <Chat\r\n                socketClient={socket()} \r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GlobalChat;","import SocketIOClient from 'socket.io-client';\r\n\r\nexport const socket = () => SocketIOClient('http://25.42.11.72:25565/');","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport LandingPage from './pages/LandingPage';\r\nimport LoginPage from './pages/LoginPage';\r\nimport SignupPage from './pages/Signup';\r\nimport VerifyLogged from './pages/VerifyLogged';\r\n\r\nimport GlobalChat from './pages/GlobalChat';\r\n\r\nexport const Router: React.FC = () => (\r\n    <BrowserRouter>\r\n        <Route component={VerifyLogged} />\r\n        <Switch>\r\n            <Route path=\"/\" component={LandingPage} exact />\r\n            <Route path=\"/login\" component={LoginPage} />\r\n            <Route path=\"/signup\" component={SignupPage} />\r\n            <Route path={[\"/chat\", \"/chat/global\"]} component={GlobalChat} />\r\n            {/* <Route path=\"/chat/:id\" component={PrivateChat} /> */}\r\n        </Switch>\r\n    </BrowserRouter>\r\n)","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst rotating = keyframes`\r\n    from {\r\n        transform: rotate(0deg);\r\n    }\r\n    \r\n    to {\r\n        transform: rotate(360deg);\r\n    }\r\n`;\r\n\r\nexport const RotatingImg = styled.img`\r\n    max-height: 20vh;\r\n    max-width: 40vw;\r\n    animation: ${rotating} 1s linear infinite;\r\n`;","import React from 'react';\r\n\r\nimport { RotatingImg } from \"./styles\";\r\nimport img from '../../assets/img/loading.png'\r\n\r\nexport const Loading: React.FC = () => {\r\n    return (\r\n        <RotatingImg src={img} />\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport { Router } from './routes';\n\nimport { LoggedUserContext, IContextValue } from './components/LoggedUserContext'\nimport {Loading} from \"./pages/Loading\";\nimport { api } from './services/api';\n\nimport './global.css';\n\nfunction App() {\n\n    const [login, setLogin] = useState<Omit<IContextValue, 'changeValue'>>();\n\n    useEffect(() => {\n        try {\n            (async () => {\n                const response = await api.get('/logged');\n                setLogin(response.data);\n            })();\n        } catch {\n\n        }\n    }, []);\n\n    const loginContextVal: IContextValue | undefined = login? {\n        changeValue: (newVal: {logged: boolean, user?: string}) => {\n            setLogin(newVal);\n        },\n        ...login\n    } : undefined;\n\n    return (\n        loginContextVal ?\n            <LoggedUserContext.Provider value={loginContextVal}>\n                <Router />\n            </LoggedUserContext.Provider>\n        : <Loading />\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/loading.e3c77b9e.png\";"],"sourceRoot":""}